// Code generated by mockery v2.46.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// IsLineSyncedChecker is an autogenerated mock type for the IsLineSyncedChecker type
type IsLineSyncedChecker struct {
	mock.Mock
}

type IsLineSyncedChecker_Expecter struct {
	mock *mock.Mock
}

func (_m *IsLineSyncedChecker) EXPECT() *IsLineSyncedChecker_Expecter {
	return &IsLineSyncedChecker_Expecter{mock: &_m.Mock}
}

// Execute provides a mock function with given fields:
func (_m *IsLineSyncedChecker) Execute() bool {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsLineSyncedChecker_Execute_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Execute'
type IsLineSyncedChecker_Execute_Call struct {
	*mock.Call
}

// Execute is a helper method to define mock.On call
func (_e *IsLineSyncedChecker_Expecter) Execute() *IsLineSyncedChecker_Execute_Call {
	return &IsLineSyncedChecker_Execute_Call{Call: _e.mock.On("Execute")}
}

func (_c *IsLineSyncedChecker_Execute_Call) Run(run func()) *IsLineSyncedChecker_Execute_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *IsLineSyncedChecker_Execute_Call) Return(_a0 bool) *IsLineSyncedChecker_Execute_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *IsLineSyncedChecker_Execute_Call) RunAndReturn(run func() bool) *IsLineSyncedChecker_Execute_Call {
	_c.Call.Return(run)
	return _c
}

// NewIsLineSyncedChecker creates a new instance of IsLineSyncedChecker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIsLineSyncedChecker(t interface {
	mock.TestingT
	Cleanup(func())
}) *IsLineSyncedChecker {
	mock := &IsLineSyncedChecker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
